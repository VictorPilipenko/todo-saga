{"version":3,"sources":["common/button/index.js","pages/todo/containers/template.js","common/pagination/index.js","pages/todo/components/head.js","pages/todo/components/item.js","pages/todo/components/list.js","common/input/index.js","pages/todo/components/create.js","store/queries/todo.js","pages/todo/table/components/add/index.js","pages/todo/table/components/item/index.js","pages/todo/table/components/list/index.js","pages/todo/table/index.js","pages/todo/index.js"],"names":["CircleButton","styled","button","props","open","css","Button","TemplateBlock","div","Template","children","callOnPageVisibility","dispatch","useDispatch","isFirstMount","useIsFirstMount","isVisible","usePageVisibility","useEffect","console","log","name","axiosCache","reset","PaginationComponent","current","total","pageSize","onChange","rest","Remove","li","done","ul","disabled","input","slideup","keyframes","slidedown","form","disappear","page","selector","state","todos","pagination","currentPage","action","setCurrentPage","stringToValue","string","Number","parseInt","size","setPageSize","RowBox","AddForm","onFormSubmit","loading","useForm","getTodos","onFinish","getFieldValue","resetFields","layout","justify","gutter","wrap","Item","rules","required","message","placeholder","type","htmlType","block","PlusCircleFilled","totalCount","showSizeChanger","pageSizeOptions","TagBox","ColBox","todo","onTodoRemoval","onTodoToggle","actions","areFetching","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","details","title","onConfirm","danger","color","text","fetchingError","showIcon","closable","id","TodoList","err","description","locale","emptyText","dataSource","renderItem","TodosContainer","useSelector","items","subTitle","data","createTodo","deleteTodo","markTodoDone","reduxQuerySync","store","params","queries","initialTruth","replaceState","pageTitle","pageDescription","App","Helmet","property","content"],"mappings":"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","file":"static/js/8.b716613d.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5), 0px 0px 1px rgba(0, 0, 0, 0.5);\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5), 0px 0px 1px rgba(0, 0, 0, 0.5);\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  padding: 15px;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 10px;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: 0.125s all ease-in;\r\n  bottom: 20%;\r\n`;\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { usePageVisibility } from \"../../../hooks/usePageVisibility\";\r\nimport { axiosCache } from \"../../../config/axios\";\r\nimport { useIsFirstMount } from \"../../../hooks/useIsFirstMount\";\r\n\r\nconst TemplateBlock = styled.div`\r\n  max-width: 512px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Template = ({ children, callOnPageVisibility }) => {\r\n  const dispatch = useDispatch()\r\n  const isFirstMount = useIsFirstMount()\r\n  const isVisible = usePageVisibility()\r\n\r\n  useEffect(() => {\r\n    if (\r\n      typeof callOnPageVisibility === \"function\" &&\r\n      isVisible &&\r\n      !isFirstMount\r\n    ) {\r\n      console.log(`${callOnPageVisibility?.name} from Template on usePageVisibility hook by isVisible === true`)\r\n      axiosCache.reset()\r\n      dispatch(callOnPageVisibility())\r\n    }\r\n  }, [isVisible]) // eslint-disable-line\r\n\r\n  return <TemplateBlock>{children}</TemplateBlock>\r\n}\r\n\r\nexport default Template;\r\n","import React from 'react'\r\nimport { Pagination } from 'antd'\r\n\r\nconst PaginationComponent = ({\r\n  current,\r\n  total,\r\n  pageSize,\r\n  onChange,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Pagination\r\n      current={current}\r\n      total={total}\r\n      pageSize={pageSize}\r\n      onChange={onChange}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PaginationComponent\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Pagination from \"../../../common/pagination\"\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 21px;\r\n    color: #868e96;\r\n  }\r\n`\r\n\r\nconst TodoHead = ({ pagination, setPageSize, pageChangeHandler, loading }) => {\r\n  return (\r\n    <TodoHeadBlock>\r\n      <Pagination\r\n        loading={loading}\r\n        currentPage={pagination.currentPage}\r\n        pageSize={pagination.pageSize}\r\n        totalPages={pagination.totalPages}\r\n        valueHandler={setPageSize}\r\n        pageChangeHandler={pageChangeHandler}\r\n        options={[1, 2, 3]}\r\n      />\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoHead)\r\n","import React, { memo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdDelete, MdDone } from \"react-icons/md\";\r\nimport { Loader } from \"../../../common/loader\";\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\nconst TodoItemBlock = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    background: #63f7cb2b;\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\nconst CheckCircle = styled.div`\r\n  position: relative;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst TodoItem = ({ details: { id, done, text }, markTodoDone, deleteTodoById, fetchingError, areFetching }) => {\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={() => !done && !areFetching && markTodoDone(id)}>\r\n        {done && <MdDone />}\r\n        {areFetching && <Loader />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove>\r\n        <MdDelete onClick={() => !areFetching && deleteTodoById(id)} />\r\n      </Remove>\r\n      {fetchingError && <Text>{fetchingError}</Text>}\r\n    </TodoItemBlock>\r\n  )\r\n}\r\n\r\nexport default memo(TodoItem);\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Loader } from \"../../../common/loader\";\r\nimport ListSkeleton from \"../../../common/skeleton/list\";\r\nimport TodoItem from \"../containers/item\";\r\n\r\nconst TodoListBlock = styled.ul`\r\n  position: relative;\r\n  flex: 1;\r\n  padding: 20px 32px;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n  ${props =>\r\n    props.disabled &&\r\n    css`\r\n      pointer-events: none;\r\n    `}\r\n`;\r\nconst Message = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n  font-size: 21px;\r\n  color: #49505778;\r\n`;\r\n\r\nconst TodoList = ({ data, loading, err }) => {\r\n  return (\r\n    <TodoListBlock disabled={loading}>\r\n      {\r\n        data.map(({ ...otherProps }, key) => (\r\n          <TodoItem key={key} id={key} {...otherProps} />\r\n        ))\r\n      }\r\n      {\r\n        loading && data.length === 0 ? <ListSkeleton /> :\r\n          loading && data.length > 0 && <Loader global/>\r\n      }\r\n      {\r\n        err ? <Message>{err.message}</Message> :\r\n          !data.length && !loading && <Message>Добавьте, пожалуйста, чем заняться!</Message>\r\n      }\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n`;\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport { Input } from \"../../../common/input\";\r\nimport { CircleButton } from \"../../../common/button\";\r\n\r\nconst slideup = keyframes`\r\n    from {\r\n      padding-bottom: 40px;\r\n    }\r\n    to {\r\n      padding-bottom: 72px;\r\n    }\r\n  `;\r\nconst slidedown = keyframes`\r\n  from {\r\n    padding-bottom: 72px;\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    padding-bottom: 0px;\r\n    opacity: 0;\r\n  }  \r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n  animation-duration: 0.125s;\r\n  animation-timing-function: ease-out;\r\n  animation-name: ${slideup};\r\n  ${({ disappear }) =>\r\n    disappear &&\r\n    css`\r\n      animation-name: ${slidedown};\r\n      padding-bottom: 0px;\r\n    `}\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst TodoCreate = ({\r\n  localOpen,\r\n  open,\r\n  onToggle,\r\n  disappear,\r\n  animate,\r\n  onSubmit,\r\n  setInputRef\r\n}) => <>\r\n    {(localOpen || animate) && (\r\n      <InsertFormPositioner>\r\n        <InsertForm disappear={disappear} onSubmit={onSubmit}>\r\n          <Input\r\n            autoFocus\r\n            placeholder=\"После ввода нажмите Enter\"\r\n            ref={setInputRef}\r\n          />\r\n        </InsertForm>\r\n      </InsertFormPositioner>\r\n    )}\r\n    <CircleButton onClick={onToggle} open={open}>\r\n      <MdAdd />\r\n    </CircleButton>\r\n  </>\r\n\r\nexport default TodoCreate;\r\n","import { setCurrentPage, setPageSize } from \"../actions/todo\";\r\n\r\nexport default {\r\n\tpage: {\r\n\t\tselector: state => state.todos.pagination.currentPage,\r\n    action: setCurrentPage,\r\n    stringToValue: string => Number.parseInt(string) || 1\r\n  },\r\n  size: {\r\n\t\tselector: state => state.todos.pagination.pageSize,\r\n    action: setPageSize,\r\n    stringToValue: string => Number.parseInt(string) || 1\r\n  },\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, Row, Col, Button, Input } from 'antd';\r\nimport { PlusCircleFilled } from '@ant-design/icons';\r\nimport { getTodos } from '../../../../../store/actions/todo';\r\nimport Pagination from '../../../../../common/pagination';\r\nimport { Default } from '../../../../../common/responsive';\r\n\r\nconst RowBox = styled(Row)`\r\n  margin-bottom: 10px; \r\n`;\r\nconst AddForm = ({ onFormSubmit, loading, pagination }) => {\r\n  const [form] = Form.useForm()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = () => {\r\n    onFormSubmit({\r\n      name: form.getFieldValue('name')\r\n    })\r\n    form.resetFields()\r\n  }\r\n\r\n  const onChange = (page, pageSize) => {\r\n    dispatch(getTodos({\r\n      page,\r\n      pageSize\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodos({\r\n      page: pagination.currentPage,\r\n      pageSize: pagination.pageSize\r\n    }))\r\n  }, []) // eslint-disable-line\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onFinish={onFinish}\r\n      layout=\"horizontal\"\r\n    >\r\n      <Row justify='space-between'>\r\n        <RowBox gutter={15} wrap={false} >\r\n          <Col>\r\n            <Form.Item\r\n              name={'name'}\r\n              rules={[{\r\n                required: true,\r\n                message: 'This field is required'\r\n              }]}\r\n            >\r\n              <Input placeholder=\"What needs to be done?\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"primary\" htmlType=\"submit\" block disabled={loading}>\r\n              <PlusCircleFilled />\r\n              <Default> Add todo</Default>\r\n            </Button>\r\n          </Col>\r\n        </RowBox>\r\n\r\n        <Col>\r\n          <Pagination\r\n            current={pagination.currentPage}\r\n            total={pagination.totalCount}\r\n            pageSize={pagination.pageSize}\r\n            showSizeChanger\r\n            onChange={onChange}\r\n            pageSizeOptions={['1', '2', '5', '10']}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AddForm\r\n","import React from 'react';\r\nimport { Tag, List, Button, Popconfirm, Switch, Alert, Row, Col } from 'antd';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport styled from \"styled-components\";\r\n\r\nconst TagBox = styled(Tag)`\r\n  white-space: normal !important;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst ColBox = styled(Col)`\r\n  margin: 10px 0px 0px 0px;\r\n`;\r\n\r\nconst RowBox = styled(Row)`\r\n  flex-direction: column !important; \r\n`;\r\n\r\nconst Item = ({ todo, onTodoRemoval, onTodoToggle }) => {\r\n  return (\r\n    <List.Item\r\n      actions={[\r\n        <Switch\r\n          loading={todo.areFetching}\r\n          checkedChildren={<CheckOutlined />}\r\n          unCheckedChildren={<CloseOutlined />}\r\n          onChange={state => onTodoToggle({ todo, state })}\r\n          checked={todo.details.done}\r\n        />,\r\n        <Popconfirm\r\n          disabled={todo.areFetching}\r\n          title=\"Are you sure you want to delete?\"\r\n          onConfirm={() => {\r\n            onTodoRemoval(todo)\r\n          }}\r\n        >\r\n          <Button type=\"primary\" danger disabled={todo.areFetching}>\r\n            X\r\n          </Button>\r\n        </Popconfirm>,\r\n      ]}\r\n      key={todo.details.id}\r\n    >\r\n      <RowBox>\r\n        <Col>\r\n          <TagBox color={todo.details.done ? 'green' : 'red'}>\r\n            {todo.details.text}\r\n          </TagBox>\r\n        </Col>\r\n        {\r\n          todo.fetchingError && \r\n          <ColBox>\r\n            <Alert message={todo.fetchingError} type=\"error\" showIcon closable />\r\n          </ColBox>\r\n        }\r\n      </RowBox>\r\n    </List.Item>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport { Alert, List } from 'antd'\r\nimport Item from '../item'\r\n\r\nconst TodoList = ({ err, loading, todos, onTodoRemoval, onTodoToggle }) => (\r\n  err ?\r\n    <Alert\r\n      message=\"Error Message\"\r\n      description={err}\r\n      type=\"error\"\r\n    />\r\n    :\r\n    <List\r\n      loading={loading}\r\n      locale={{\r\n        emptyText: \"There's nothing to do :(\"\r\n      }}\r\n      dataSource={todos}\r\n      renderItem={todo => (\r\n        <Item\r\n          todo={todo}\r\n          onTodoToggle={onTodoToggle}\r\n          onTodoRemoval={onTodoRemoval}\r\n        />\r\n      )}\r\n    />\r\n)\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport { Row, Card, PageHeader } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { markTodoDone, deleteTodo, createTodo } from '../../../store/actions/todo'\r\nimport AddTodoForm from './components/add'\r\nimport TodoList from './components/list'\r\nimport { Default } from '../../../common/responsive'\r\n\r\nconst TodosContainer = () => {\r\n  const { items, loading, err, pagination } = useSelector(state => state.todos)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleFormSubmit = (todo) => {\r\n    const data = {\r\n      text: todo.name,\r\n      done: false\r\n    }\r\n    dispatch(createTodo(data))\r\n  }\r\n\r\n  const handleRemoveTodo = (todo) => {\r\n    const data = {\r\n      id: todo.details.id\r\n    }\r\n    dispatch(deleteTodo(data))\r\n  }\r\n\r\n  const handleTodoToggle = ({ todo, state }) => {\r\n    const data = {\r\n      id: todo.details.id,\r\n      done: state\r\n    }\r\n    dispatch(markTodoDone(data))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Default>\r\n        <Row>\r\n          <PageHeader\r\n            title=\"Add Todo\"\r\n            subTitle=\"To add a todo, just fill the form below and click in add todo.\"\r\n          />\r\n        </Row>\r\n      </Default>\r\n      <Card title=\"Create a new todo\">\r\n        <AddTodoForm onFormSubmit={handleFormSubmit} loading={loading} pagination={pagination} />\r\n      </Card>\r\n      <Card title=\"Todo List\">\r\n        <TodoList\r\n          err={err}\r\n          loading={loading}\r\n          todos={items}\r\n          onTodoRemoval={handleRemoveTodo}\r\n          onTodoToggle={handleTodoToggle}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodosContainer\r\n","\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Template from \"./containers/template\";\r\nimport TodoHead from \"./containers/head\";\r\nimport TodoList from \"./containers/list\";\r\nimport TodoCreate from \"./containers/create\";\r\nimport { getTodos } from \"../../store/actions/todo\";\r\n\r\nimport reduxQuerySync from 'redux-query-sync';\r\nimport queries from \"../../store/queries/todo\";\r\nimport store from \"../../store\"\r\nimport TodosContainer from \"./table\";\r\nreduxQuerySync({\r\n  store,\r\n  params: queries,\r\n  initialTruth: 'location',\r\n  replaceState: true\r\n})\r\n\r\nconst pageTitle = \"todo - Main Page\"\r\nconst pageDescription = \"We love learning - every day, in every form.\"\r\n\r\nconst App = () => {\r\n  const { pagination } = useSelector(state => state.todos)\r\n\r\n  const getTodosAPI = () => {\r\n    return getTodos({\r\n      page: pagination.currentPage,\r\n      pageSize: pagination.pageSize\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta property=\"og:title\" content={pageTitle} />\r\n        <meta name=\"description\" content={pageDescription} />\r\n        <meta name=\"twitter:title\" content={pageTitle} />\r\n        <meta name=\"twitter:description\" content={pageDescription} />\r\n      </Helmet>\r\n      <Template callOnPageVisibility={getTodosAPI}>\r\n        <TodosContainer />\r\n      </Template>\r\n      {/* <Template callOnPageVisibility={getTodosAPI}>\r\n        <TodoHead />\r\n        <TodoList />\r\n        <TodoCreate />\r\n      </Template> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n"],"sourceRoot":""}