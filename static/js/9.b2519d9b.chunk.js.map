{"version":3,"sources":["layout/sign/index.styled.js","layout/sign/index.js","pages/password-change/components/index.js","pages/password-change/index.js"],"names":["Background","styled","div","media","desktop","tablet","SubmitButton","SignLayout","children","err","useSelector","state","auth","message","type","to","params","URL","document","location","searchParams","SignUp","dispatch","useDispatch","loading","useForm","form","useEffect","setRecoveryPasswordConfirmToken","get","layout","name","onFinish","values","passwordRecoveryStep2","scrollToFirstError","Item","label","rules","required","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","htmlType","PasswordChangePage"],"mappings":"iuBAIO,IAAMA,EAAaC,UAAOC,IAAV,IAKnBC,IAAMC,QALa,KAUnBD,IAAME,OAVa,MAiBVC,EAAeL,kBAAO,IAAPA,CAAH,M,uGCQVM,IAvBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCH,IACR,OACE,eAAC,IAAD,WACGD,EACAC,GAAO,mBAAOI,QAASJ,EAAKK,KAAK,UAClC,cAAC,IAAD,UACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,WAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,qBAAT,2C,iJCVNC,EAAS,IAAIC,IAAIC,SAASC,UAAUC,aAqE3BC,EAnEA,WACb,IAAMC,EAAWC,cACTC,EAAYd,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAvCY,QAFW,EAGJ,IAAKC,UAAbC,EAHY,oBAKnBC,qBAAU,WACRC,YAAgCZ,EAAOa,IAAI,YAC3C,IAMF,OACE,cAAC,IAAD,UACE,oBACEC,OAAO,WACPJ,KAAMA,EACNK,KAAK,WACLC,SAVW,SAAAC,GACfX,EAASY,YAAsBD,KAU3BE,oBAAkB,EALpB,UAOE,kBAAMC,KAAN,CACEL,KAAK,WACLM,MAAM,WACNC,MAAO,CACL,CACEC,UAAU,EACV1B,QAAS,gCAGb2B,aAAW,EATb,SAWE,kBAAOC,SAAP,MAEF,kBAAML,KAAN,CACEL,KAAK,UACLM,MAAM,mBACNK,aAAc,CAAC,YACfF,aAAW,EACXF,MAAO,CACL,CACEC,UAAU,EACV1B,QAAS,iCAEX,gBAAG8B,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAMC,GACd,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,oDAFbD,QAAQE,cAbzB,SAoBE,kBAAOR,SAAP,MAEF,kBAAML,KAAN,UACE,cAAC,IAAD,CAActB,KAAK,UAAUoC,SAAS,SAAS1B,QAASA,EAAxD,qCC9DK2B,UAPY,WACzB,OACE,mCACE,cAAC,EAAD","file":"static/js/9.b2519d9b.chunk.js","sourcesContent":["import { Button } from \"antd\"\nimport styled from \"styled-components\"\nimport media from '../../common/responsive/device'\n\nexport const Background = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: left;\n  flex-direction: column;\n  ${media.desktop`\n    max-width: 400px;\n    width: 100%;\n    margin: auto;\n  `}\n  ${media.tablet`\n    max-width: 70%;\n    width: 100%;\n    margin: auto;\n  `}\n`\n\nexport const SubmitButton = styled(Button)`\n  width: 100%;\n`\n","import { Alert } from 'antd'\nimport Paragraph from 'antd/lib/typography/Paragraph'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Background } from './index.styled'\n\nconst SignLayout = ({ children }) => {\n  const { err } = useSelector(state => state.auth)\n  return (\n    <Background>\n      {children}\n      {err && <Alert message={err} type=\"error\" />}\n      <Paragraph>\n        <ul>\n          <li>\n            <Link to=\"/sign-in\">sign-in</Link>\n          </li>\n          <li>\n            <Link to=\"/sign-up\">sign-up</Link>\n          </li>\n          <li>\n            <Link to=\"/password-recovery\">password-recovery</Link>\n          </li>\n        </ul>\n      </Paragraph>\n    </Background>\n  )\n}\n\nexport default SignLayout\n","import {\n  Form,\n  Input\n} from 'antd'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SignLayout from '../../../layout/sign'\nimport { SubmitButton } from '../../../layout/sign/index.styled';\nimport { passwordRecoveryStep2 } from '../../../store/actions/auth';\nimport { setRecoveryPasswordConfirmToken } from '../../../utils/auth';\n\nconst params = new URL(document.location).searchParams\n\nconst SignUp = () => {\n  const dispatch = useDispatch()\n  const { loading } = useSelector(state => state.auth)\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    setRecoveryPasswordConfirmToken(params.get('token'))\n  },[])\n\n  const onFinish = values => {\n    dispatch(passwordRecoveryStep2(values))\n  }\n\n  return (\n    <SignLayout>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please confirm your password!',\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject('The two passwords that you entered do not match!');\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item>\n          <SubmitButton type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Change Password\n          </SubmitButton>\n        </Form.Item>\n      </Form>\n    </SignLayout>\n  );\n};\n\nexport default SignUp\n","import PasswordChange from './components'\n\nconst PasswordChangePage = () => {\n  return (\n    <>\n      <PasswordChange />\n    </>\n  )\n}\nexport default PasswordChangePage\n"],"sourceRoot":""}